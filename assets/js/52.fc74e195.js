(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{537:function(a,t,e){"use strict";e.r(t);var r=e(2),s=Object(r.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h2",{attrs:{id:"强缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#强缓存"}},[a._v("#")]),a._v(" 强缓存")]),a._v(" "),e("h3",{attrs:{id:"概念"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[a._v("#")]),a._v(" 概念")]),a._v(" "),e("p",[e("strong",[a._v("强缓存是向客户端查看是否存在缓存，若存在即使用，不存在则请求服务器。")]),e("br"),a._v("包含在 "),e("code",[a._v("response-header")]),a._v(" 中。")]),a._v(" "),e("h3",{attrs:{id:"实现方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实现方法"}},[a._v("#")]),a._v(" 实现方法")]),a._v(" "),e("h4",{attrs:{id:"_1-expires"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-expires"}},[a._v("#")]),a._v(" 1. Expires")]),a._v(" "),e("p",[e("strong",[a._v("HTTP/1.0")]),a._v(" 使用，它的值是"),e("strong",[a._v("第一次请求时")]),a._v("服务器返回的缓存到期时间，在再次发起该请求时，如果客户端时间小于这个时间，则直接使用缓存。"),e("br"),e("strong",[a._v("缺点：")]),a._v(" 由于时间是服务端返回的，如果客户端与服务端时间不一致，则会出现问题。")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("Expires: Wed, 21 Oct 2015 07:28:00 GMT\n")])])]),e("h4",{attrs:{id:"_2-cache-control"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-cache-control"}},[a._v("#")]),a._v(" 2. Cache-Control")]),a._v(" "),e("p",[e("strong",[a._v("HTTP/1.1")]),a._v(" 使用，他可以设置几种值用来设定缓存规则：")]),a._v(" "),e("ul",[e("li",[a._v("public：所有内容都将被缓存（客户端和代理服务器都可缓存）"),e("br")]),a._v(" "),e("li",[a._v("private：所有内容只有客户端可以缓存，Cache-Control的默认取值"),e("br")]),a._v(" "),e("li",[a._v("no-cache：客户端缓存内容，但是是否使用缓存则需要经过协商缓存来验证决定"),e("br")]),a._v(" "),e("li",[a._v("no-store：所有内容都不会被缓存，即不使用强制缓存，也不使用协商缓存"),e("br")]),a._v(" "),e("li",[a._v("max-age=xxx (xxx is numeric)：缓存内容将在xxx秒后失效")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("Cache-Control:public, max-age=31536000\n")])])]),e("h3",{attrs:{id:"判断命中"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#判断命中"}},[a._v("#")]),a._v(" 判断命中")]),a._v(" "),e("p",[a._v("图源来自 "),e("a",{attrs:{href:"https://juejin.cn/post/6844903717574017031",target:"_blank",rel:"noopener noreferrer"}},[a._v("掘金-浅聊HTTP缓存 (HTTP Cache)-Neo_Huang"),e("OutboundLink")],1),a._v(" "),e("br"),e("img",{attrs:{src:"https://gitee.com/rodrick278/img/raw/master/img/1610589582370-dcf756b2-0943-45d3-8008-dd652a4eb5a8.webp",alt:""}}),e("br"),a._v("状态码为"),e("strong",[a._v("灰色& 200")]),a._v(" 的请求则代表使用了强制缓存，请求对应的 S"),e("strong",[a._v("ize 值则代表该缓存存放的位置。")])]),a._v(" "),e("h3",{attrs:{id:"总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[a._v("#")]),a._v(" 总结")]),a._v(" "),e("p",[e("code",[a._v("cache-control")]),a._v(" 优先级比 "),e("code",[a._v("expires")]),a._v(" 高。 "),e("code",[a._v("expires")]),a._v(" 会存在两端时间不统一问题。")]),a._v(" "),e("h2",{attrs:{id:"协商缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#协商缓存"}},[a._v("#")]),a._v(" 协商缓存")]),a._v(" "),e("p",[e("strong",[a._v("协商缓存")]),a._v("指客户端"),e("strong",[a._v("第一次发起请求时")]),a._v("服务端会返回一个标识，客户端记录下后，"),e("strong",[a._v("下次请求")]),a._v("客户端会携带这个缓存标识向服务器发送请求，由服务器根据标识判断是否使用缓存，这就是“协商”的过程。"),e("br"),a._v("在强缓存的 "),e("code",[a._v("cache-control")]),a._v(" 设置了 "),e("code",[a._v("no-cache")]),a._v(" 时会使用协商缓存。")]),a._v(" "),e("h3",{attrs:{id:"实现方法-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实现方法-2"}},[a._v("#")]),a._v(" 实现方法")]),a._v(" "),e("p",[a._v("由于协商缓存过程中客户端会携带标识，所以所有的协商缓存都有"),e("strong",[a._v("客户端/服务端这样成对的 header：")])]),a._v(" "),e("h4",{attrs:{id:"_1-if-modified-since-last-modified"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-if-modified-since-last-modified"}},[a._v("#")]),a._v(" 1. If-Modified-Since/Last-modified")]),a._v(" "),e("p",[e("code",[a._v("Last-Modified")]),a._v(" 是服务器响应请求时，返回该资源文件在服务器最后被修改的时间。")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("If-Modified-Since: Wed, 21 Oct 2015 07:28:00 GMT \nLast-Modified: Wed, 21 Oct 2015 07:28:00 GMT\n")])])]),e("h4",{attrs:{id:"_2-if-none-match-etag"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-if-none-match-etag"}},[a._v("#")]),a._v(" 2. If-None-Match/Etag")]),a._v(" "),e("p",[e("code",[a._v("Etag")]),a._v(" 是服务器第一次响应时返回的一个当前资源的唯一标识，当客户端再次发起时， "),e("code",[a._v("If-none-Match")]),a._v(" 携带这个 "),e("code",[a._v("Etag")]),a._v(" 值询问服务器，服务器会根据 "),e("code",[a._v("If-None-Match")]),a._v(" 的字段值与该资源在服务器的 "),e("code",[a._v("Etag")]),a._v(" 值做对比，一致则返回 304，代表资源无更新，继续使用缓存文件；不一致则重新返回资源文件，状态码为 200。")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('If-None-Match: "33a64df551425fcc55e4d42a148795d9f25f89d4"\nETag: "33a64df551425fcc55e4d42a148795d9f25f89d4"\nETag: W/"0815"\n')])])]),e("p",[e("code",[a._v("W/")]),a._v(" 可选 "),e("code",[a._v("W/")]),a._v(" （区分大小写）表示使用弱验证程序。弱验证器很容易生成，但对于比较来说却不太有用。强大的验证器是进行比较的理想选择，但可能非常难以高效生成。")]),a._v(" "),e("h3",{attrs:{id:"判断命中-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#判断命中-2"}},[a._v("#")]),a._v(" 判断命中")]),a._v(" "),e("p",[a._v("命中返回 304。")]),a._v(" "),e("h2",{attrs:{id:"浏览器操作影响"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#浏览器操作影响"}},[a._v("#")]),a._v(" 浏览器操作影响")]),a._v(" "),e("p",[a._v("图源来自："),e("a",{attrs:{href:"http://www.alloyteam.com/2012/03/web-cache-2-browser-cache/",target:"_blank",rel:"noopener noreferrer"}},[a._v("Web缓存机制系列2 – Web浏览器的缓存机制 - Alloy Team"),e("OutboundLink")],1),e("br"),e("img",{attrs:{src:"https://gitee.com/rodrick278/img/raw/master/img/1610589582370-dcf756b2-0943-45d3-8008-dd652a4eb5a8.webp",alt:""}})]),a._v(" "),e("h2",{attrs:{id:"浏览器缓存的控制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#浏览器缓存的控制"}},[a._v("#")]),a._v(" 浏览器缓存的控制")]),a._v(" "),e("h3",{attrs:{id:"使用-html-meta-标签"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用-html-meta-标签"}},[a._v("#")]),a._v(" 使用 HTML Meta 标签")]),a._v(" "),e("p",[a._v("Web 开发者可以在 HTML 页面的")]),e("head",[a._v(" 节点中加入"),e("meta"),a._v(" 标签，代码如下："),e("p"),a._v(" "),e("div",{staticClass:"language-html extra-class"},[e("pre",{pre:!0,attrs:{class:"language-html"}},[e("code",[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("META")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("HTTP-EQUIV")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("Pragma"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),a._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("CONTENT")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("no-cache"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n")])])]),e("p",[a._v("上述代码的作用是告诉浏览器当前页面不被缓存，每次访问都需要去服务器拉取。使用上很简单，但只有部分浏览器可以支持，而且所有缓存代理服务器都不支持，因为代理不解析 HTML 内容本身。")]),a._v(" "),e("h2",{attrs:{id:"相关字段总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#相关字段总结"}},[a._v("#")]),a._v(" 相关字段总结")]),a._v(" "),e("p",[a._v("图源来自："),e("a",{attrs:{href:"http://www.alloyteam.com/2012/03/web-cache-2-browser-cache/",target:"_blank",rel:"noopener noreferrer"}},[a._v("Web缓存机制系列2 – Web浏览器的缓存机制 - Alloy Team"),e("OutboundLink")],1),e("br"),e("img",{attrs:{src:"https://gitee.com/rodrick278/img/raw/master/img/http-header1.png",alt:""}})])])])}),[],!1,null,null,null);t.default=s.exports}}]);