(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{527:function(t,s,a){"use strict";a.r(s);var n=a(2),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"起步"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#起步"}},[t._v("#")]),t._v(" 起步")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/332223083",target:"_blank",rel:"noopener noreferrer"}},[t._v("知乎 - 新人如何学习正则表达式"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("测试正则网站：")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://regex101.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://regex101.com/"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://jex.im/regulex/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://jex.im/regulex/"),a("OutboundLink")],1)])]),t._v(" "),a("p",[t._v("正则表达式（可叫作“regexp”或者“reg”）包含 模式 和可选的 修饰符。\n创建一个正则表达式对象有两种语法。\n较长一点的语法：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("regexp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegExp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pattern"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"flags"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v('较短一点的语法，使用斜杠 "/"：')]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("regexp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/pattern/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 没有修饰符")]),t._v("\nregexp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/pattern/gmi")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 伴随修饰符 g、m 和 i（后面会讲到）")]),t._v("\n")])])]),a("p",[t._v("斜杠 "),a("code",[t._v('"/"')]),t._v("  会告诉 JavaScript 我们正在创建一个正则表达式。它的作用类似于字符串的引号。\n"),a("code",[t._v("new RegExp")]),t._v(" 可以动态传入参数创建正则")]),t._v(" "),a("h2",{attrs:{id:"修饰符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修饰符"}},[t._v("#")]),t._v(" 修饰符")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("i")]),t._v("  代表不区分大小写")]),t._v(" "),a("li",[a("code",[t._v("g")]),t._v("  全部匹配")]),t._v(" "),a("li",[a("code",[t._v("u")]),t._v("  根据 Unicode 属性匹配，使用 "),a("code",[t._v("\\p{...}/u")]),t._v(" ，"),a("a",{attrs:{href:"https://zh.javascript.info/regexp-unicode#unicode-shu-xing-unicodepropertiesp",target:"_blank",rel:"noopener noreferrer"}},[t._v("详细属性查看"),a("OutboundLink")],1)])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" regexp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\p{sc=Han}/gu")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用来匹配中文")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("Hello Привет 你好 123_456")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regexp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 你,好")]),t._v("\n")])])]),a("ul",[a("li",[a("code",[t._v("m")]),t._v("  多行模式，每行都会一次匹配（^ 每行会匹配一次开头 $ 同理）")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("1st place: Winnie\n2nd place: Piglet\n33rd place: Eeyore")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/^\\d+/gm")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1, 2, 33")]),t._v("\n")])])]),a("h2",{attrs:{id:"字符类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符类"}},[t._v("#")]),t._v(" 字符类")]),t._v(" "),a("p",[t._v("常用的字符类：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("\\d")]),t._v(" 数字")]),t._v(" "),a("li",[a("code",[t._v("\\s")]),t._v(" 空格 space")]),t._v(" "),a("li",[a("code",[t._v("\\w")]),t._v(" 单字符 word，包括字母数字下划线")])]),t._v(" "),a("p",[t._v("可以组合，比如：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test ES 6 AA"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" reg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/e\\w\\s\\d/i")]),t._v("\nstr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["ES 6", index: 6, input: "test ES 6 AA", groups: undefined]')]),t._v("\n")])])]),a("p",[t._v("每个字符类都有反向类，代表 "),a("code",[t._v("非xx")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("\\D")]),t._v("  非数字")]),t._v(" "),a("li",[a("code",[t._v("\\S")]),t._v("  非空格")]),t._v(" "),a("li",[a("code",[t._v("\\W")]),t._v("  非单字符")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"+7(903)-123-45-67"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\D/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 79031234567")]),t._v("\n")])])]),a("ul",[a("li",[a("code",[t._v(".")]),t._v("  匹配任意字符（换行符除外） "),a("code",[t._v('"/ES./"')])]),t._v(" "),a("li",[a("code",[t._v("\\b")]),t._v("  查找目标“词”是否在"),a("strong",[t._v("边界")]),t._v("，比如 "),a("code",[t._v("/\\bjava\\b/")]),t._v(" 可以匹配 "),a("code",[t._v("!java!")]),t._v(" 但是不能匹配 "),a("code",[t._v("javac")])])]),t._v(" "),a("h2",{attrs:{id:"锚点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#锚点"}},[t._v("#")]),t._v(" 锚点 ^ $")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("^xx")]),t._v("  表示以 xx 开头")]),t._v(" "),a("li",[a("code",[t._v("xx$")]),t._v("  表示以 xx 结尾")])]),t._v(" "),a("p",[t._v("二者结合可以用以完全匹配")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" time "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"12:02"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" reg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/^\\d\\d:\\d\\d$/")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// .test 可以测试是否匹配")]),t._v("\nreg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("time"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true ")]),t._v("\n")])])]),a("p",[t._v("空字符串 "),a("code",[t._v("''")]),t._v(" ，可以用 "),a("code",[t._v("/^$/")]),t._v(" 匹配")]),t._v(" "),a("h2",{attrs:{id:"需转义字符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#需转义字符"}},[t._v("#")]),t._v(" 需转义字符")]),t._v(" "),a("p",[a("strong",[t._v("[ \\ ^ $ . | ? * + ( )")])]),t._v(" "),a("h2",{attrs:{id:"集合与范围"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#集合与范围"}},[t._v("#")]),t._v(" 集合与范围 [...]")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("[abc]")]),t._v(" 表示 "),a("code",[t._v("'a'、'b'、'c'")]),t._v(" 中的任意一个，也就是 "),a("strong",[t._v("或")])]),t._v(" "),a("li",[a("code",[t._v("[a-z]、[1-5]")]),t._v(" 表示范围， "),a("code",[t._v("[0-9A-F]")]),t._v(" 表示 0-9 "),a("strong",[t._v("或者")]),t._v(" A-F， "),a("code",[t._v("[\\w-]")]),t._v(" 表示 字母 或 连字符 "),a("code",[t._v("-")])]),t._v(" "),a("li",[a("code",[t._v("[^abcd]")]),t._v(" 表示匹配 a、b、c、d 以外的 "),a("strong",[t._v("字符")]),t._v(" ，这种写法用以 "),a("strong",[t._v("排除")])])]),t._v(" "),a("h2",{attrs:{id:"或"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#或"}},[t._v("#")]),t._v(" 或 |")]),t._v(" "),a("p",[a("code",[t._v("a|b")]),t._v(" 相当于 "),a("code",[t._v("[ab]")]),t._v(" ，我们可以这样使用：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("gr(a|e)y")]),t._v(" 严格等同 "),a("code",[t._v("gr[ae]y")]),t._v("。")]),t._v(" "),a("li",[a("code",[t._v("gra|ey")]),t._v(" 匹配 “gra” or “ey”。")])]),t._v(" "),a("h2",{attrs:{id:"量词控制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#量词控制"}},[t._v("#")]),t._v(" 量词控制 * + ?")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("*")]),t._v("  匹配 0~∞ 个   "),a("code",[t._v("/\\d*/")]),t._v(" 任意个数字")]),t._v(" "),a("li",[a("code",[t._v("+")]),t._v("  匹配 1~∞ 个")]),t._v(" "),a("li",[a("code",[t._v("?")]),t._v("  匹配 0 or 1 个，相当于 "),a("code",[t._v("{0,1}")])]),t._v(" "),a("li",[a("code",[t._v("{n}")]),t._v(" 匹配 n 个， "),a("code",[t._v("\\d{3}")]),t._v(" 匹配三个连续数字，相当于 "),a("code",[t._v("\\d\\d\\d")])]),t._v(" "),a("li",[a("code",[t._v("{2,5}")]),t._v(" 匹配2 - 5位的数字")]),t._v(" "),a("li",[a("code",[t._v("{3,}")]),t._v("  匹配 >= 3 个位数字")])]),t._v(" "),a("h2",{attrs:{id:"贪婪模式与懒惰模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#贪婪模式与懒惰模式"}},[t._v("#")]),t._v(" 贪婪模式与懒惰模式")]),t._v(" "),a("p",[t._v("看一个例子")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hi" some word "ok" aa')]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" reg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v('/".+"/g')]),t._v("\nstr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//["hi" some word "ok"]')]),t._v("\n")])])]),a("p",[t._v("我们其实是想匹配出 "),a("code",[t._v('["hi","ok"]')]),t._v(" ，但是却匹配到了整句，这是因为 "),a("strong",[t._v("贪婪搜索")]),t._v(" 会先按顺序分别取匹配 "),a("code",[t._v('" . +')])]),t._v(" "),a("ol",[a("li",[t._v("当匹配 "),a("code",[t._v('"')]),t._v(" 的时候，匹配到第一个引号，此时匹配字符串是 "),a("code",[t._v('"')])]),t._v(" "),a("li",[t._v("当匹配 "),a("code",[t._v(".")]),t._v(" 的时候，匹配字符串是 "),a("code",[t._v('"h')])]),t._v(" "),a("li",[t._v("当匹配 "),a("code",[t._v("+")]),t._v(" 的时候，字符串变为了 "),a("code",[t._v('"hi" some word "ok" aa')]),t._v(" ！因为后面所有的字符都复合 "),a("code",[t._v(".+")]),t._v(" 的规则，即不包含换行的任意字符")]),t._v(" "),a("li",[t._v("此时匹配 "),a("code",[t._v('"')]),t._v(" ，发现已经匹配多了，找不到 "),a("code",[t._v('"')]),t._v(" ，于是开始 "),a("strong",[t._v("回溯")]),t._v(" ，知道回溯成为 "),a("code",[t._v('"hi" some word "ok"')])])]),t._v(" "),a("p",[t._v("这就是 "),a("strong",[t._v("贪婪模式")]),t._v(" 。")]),t._v(" "),a("p",[t._v("再看一个例子：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("123 456")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" reg1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\d+ \\d+?/")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" reg2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\d+ \\d+/")]),t._v("\nstr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 123 4")]),t._v("\nstr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 123 456")]),t._v("\n")])])]),a("p",[t._v("在量词之后加上 "),a("code",[t._v("?")]),t._v(" ，即 "),a("code",[t._v(".? +? ??")]),t._v("  等，会变为 "),a("strong",[t._v("懒惰模式")]),t._v(" ，他不会一次性完全匹配，而是在匹配到满足条件的第一位时就停止匹配。")]),t._v(" "),a("h2",{attrs:{id:"捕获组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#捕获组"}},[t._v("#")]),t._v(" 捕获组 (...)")]),t._v(" "),a("h3",{attrs:{id:"组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组"}},[t._v("#")]),t._v(" 组")]),t._v(" "),a("p",[t._v("举个例子：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"gogogoaa"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" reg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(go)+/")]),t._v("\nstr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// gogogo")]),t._v("\n")])])]),a("p",[t._v("很好理解，就是将多个字符算成一个整体进行匹配")]),t._v(" "),a("p",[t._v("接下来看几个例子")]),t._v(" "),a("ul",[a("li",[t._v("域名匹配")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("/([\\w-]+\\.)+\\w+/g\n\n可以匹配的格式\naaa.aaa.aa\naa-aa.aaa.aa\n")])])]),a("ul",[a("li",[t._v("email")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("/[-.\\w]+@([\\w-]+\\.)+[\\w-]+/g\n")])])]),a("p",[a("code",[t._v("(xx)")]),t._v(" 被称为 "),a("strong",[t._v("组(group)")]),t._v(" 的概念，括号内的内容不仅匹配时被作为一个整体，并且组内匹配的对象会被返回：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'<h1>Hello, world!</h1>'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" tag "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/<(.*?)>/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" tag"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <h1>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" tag"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// h1")]),t._v("\n")])])]),a("h3",{attrs:{id:"嵌套组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#嵌套组"}},[t._v("#")]),t._v(" 嵌套组")]),t._v(" "),a("p",[t._v("返回的结果数组， "),a("code",[t._v("[0]")]),t._v(" 的位置是正常全匹配返回的值，而 "),a("code",[t._v("[1]")]),t._v(" 的位置是括号内匹配到到的值。我们可以用这个方法做 "),a("strong",[t._v("嵌套组")]),t._v(" ：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<group1 group2>")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/<((\\w+)\\s(\\w+))>/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//<group1 group2>")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//group1 group2")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//group1")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//group2")]),t._v("\n")])])]),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" match "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ac'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/a(z)?(c)?/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" match"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" match"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ac（完全匹配）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" match"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined，因为 (z)? 没匹配项")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" match"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// c")]),t._v("\n")])])]),a("h3",{attrs:{id:"matchall-配合-g-修饰符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#matchall-配合-g-修饰符"}},[t._v("#")]),t._v(" matchAll 配合 g 修饰符")]),t._v(" "),a("p",[t._v("上述都是在没有 "),a("code",[t._v("g")]),t._v(" 标签时匹配的单个对象返回的数组，那么如果有 "),a("code",[t._v("g")]),t._v(" 会返回多个对象的话，可以用 "),a("code",[t._v("matchAll")]),t._v(" 来匹配：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<group1> <group2>")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("matchAll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/<(group\\d)>/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\narr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <group1>")]),t._v("\narr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// group1")]),t._v("\narr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <group2>")]),t._v("\narr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// group2")]),t._v("\n")])])]),a("p",[t._v("注意， "),a("code",[t._v("matchAll")]),t._v(" 返回的不是数组，而是一个可迭代的对象。")]),t._v(" "),a("h3",{attrs:{id:"命名组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#命名组"}},[t._v("#")]),t._v(" 命名组 ?"),a("name")],1),t._v(" "),a("p",[t._v("把上面的例子稍微修改")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<group1 group2>")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/<(?<g0>(?<g1>\\w+)\\s(?<g2>\\w+))>/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" groups "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("groups\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//<group1 group2>")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("groups"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("g0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//group1 group2")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("groups"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("g1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//group1")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("groups"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("g2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//group2")]),t._v("\n")])])]),a("p",[t._v("我们可以通过 "),a("strong",[t._v("在括号后立即加上")]),t._v(" "),a("code",[t._v("?<name>")]),t._v(" 的方式设置 group 名，通过返回数组的 "),a("code",[t._v("groups")]),t._v(" 属性获取一个 group 对象")]),t._v(" "),a("h3",{attrs:{id:"替换捕获组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#替换捕获组"}},[t._v("#")]),t._v(" 替换捕获组")]),t._v(" "),a("p",[t._v("方法 "),a("code",[t._v("str.replace(regexp, replacement)")]),t._v(" 用 "),a("code",[t._v("replacement")]),t._v(" 替换 "),a("code",[t._v("str")]),t._v(" 中匹配 "),a("code",[t._v("regexp")]),t._v(" 的所有捕获组。这使用 "),a("code",[t._v("$n")]),t._v(" 来完成，其中 "),a("code",[t._v("n")]),t._v(" 是组号。\n例如，")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"John Bull"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" regexp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(\\w+) (\\w+)/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regexp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'$2, $1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Bull, John")]),t._v("\n")])])]),a("p",[t._v("对于命名括号，引用为 "),a("code",[t._v("$<name>")]),t._v("。\n例如，让我们将日期格式从 “year-month-day” 更改为 “day.month.year”：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" regexp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(?<year>[0-9]{4})-(?<month>[0-9]{2})-(?<day>[0-9]{2})/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2019-10-30, 2020-01-01"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regexp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'$<day>.$<month>.$<year>'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 30.10.2019, 01.01.2020")]),t._v("\n")])])]),a("h3",{attrs:{id:"反向引用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#反向引用"}},[t._v("#")]),t._v(" 反向引用")]),t._v(" "),a("p",[t._v("我们需要找到带引号的字符串：单引号 "),a("code",[t._v("'...'")]),t._v(" 或双引号 "),a("code",[t._v('"..."')]),t._v("– 应匹配两种变体。\n然后我们有一句话 "),a("code",[t._v('"She\'s the one!"')]),t._v(" ，这时候如果我们用 "),a("code",[t._v("/['\"](.*?)['\"]/g")]),t._v(" ，则会匹配到 "),a("code",[t._v("\"She'")]),t._v(" ，显然不对")]),t._v(" "),a("p",[t._v("那么问题在于，"),a("strong",[t._v("我们怎么让正则记住我们某一个分组中捕获的")]),t._v("内容\n这时候可以使用 "),a("strong",[t._v("反向引用")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('He said: "She\'s the one!".')]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" regexp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(['\"])(.*?)\\1/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regexp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "She\'s the one!"')]),t._v("\n")])])]),a("p",[t._v("这里的 "),a("code",[t._v("\\1")]),t._v(" 会找到第一个 group ，也就是 "),a("code",[t._v("(['\"])")]),t._v(" 匹配到的内容，也就是 "),a("code",[t._v('"')]),t._v(" ，然后这个正则就相当于变成了 "),a("code",[t._v('/([\'"])(.*?)"/g')])]),t._v(" "),a("p",[t._v("我们还可以用 "),a("code",[t._v("\\k<name>")]),t._v(" 的方式去引用：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('He said: "She\'s the one!".')]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" regexp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(?<g1>['\"])(.*?)\\k<g1>/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regexp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "She\'s the one!"')]),t._v("\n")])])]),a("h2",{attrs:{id:"断言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#断言"}},[t._v("#")]),t._v(" 断言")]),t._v(" "),a("h3",{attrs:{id:"前瞻断言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前瞻断言"}},[t._v("#")]),t._v(" 前瞻断言")]),t._v(" "),a("p",[t._v("用法：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("x(?=y)")]),t._v(" 仅当 x 后面是 y 的时候匹配")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1 turkey costs 30€"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\d+(?=€)/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 30 （正确地跳过了单个的数字 1）")]),t._v("\n")])])]),a("ul",[a("li",[a("code",[t._v("x(?!y)")]),t._v(" 仅当 x 后面不是 y 的时候匹配")])]),t._v(" "),a("h3",{attrs:{id:"后瞻断言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#后瞻断言"}},[t._v("#")]),t._v(" 后瞻断言")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("(?<=y)x")]),t._v(", 匹配 "),a("code",[t._v("x")]),t._v(", 仅在前面是 "),a("code",[t._v("y")]),t._v(" 的情况。")]),t._v(" "),a("li",[a("code",[t._v("(?<!y)x")]),t._v(", 匹配 "),a("code",[t._v("x")]),t._v(", 仅在前面不是 "),a("code",[t._v("y")]),t._v(" 的情况。")])]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("注意！")]),t._v(" 断言仅仅是作为占位，不会匹配字符，比如 "),a("code",[t._v("/q(?=u)i/")]),t._v(" 匹配 "),a("code",[t._v("'quit'")]),t._v(" 是会失败的，因为 "),a("code",[t._v("/q(?=u)/")]),t._v(" 只能匹配到 "),a("code",[t._v("q")]),t._v(" 而不是 "),a("code",[t._v("qu")])])]),t._v(" "),a("h3",{attrs:{id:"捕获组-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#捕获组-2"}},[t._v("#")]),t._v(" 捕获组")]),t._v(" "),a("p",[t._v("如果我们想要捕捉整个环视表达式或其中的一部分，那也是有可能的。只需要将其包裹在另加的括号中。\n例如，这里货币符号 "),a("code",[t._v("(€|kr)")]),t._v(" 和金额一起被捕获了：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1 turkey costs 30€"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" reg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\d+(?=(€|kr))/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// €|kr 两边有额外的括号")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 30, €")]),t._v("\n")])])]),a("h2",{attrs:{id:"字符串和正则方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串和正则方法"}},[t._v("#")]),t._v(" 字符串和正则方法")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("str.match(regexp)")]),t._v("  方法在字符串 "),a("code",[t._v("str")]),t._v(" 中找到匹配 "),a("code",[t._v("egexp")]),t._v(" 的字符。")]),t._v(" "),a("li",[a("code",[t._v("str.matchAll(regexp)")]),t._v("  它主要用来搜索所有组的所有匹配项")]),t._v(" "),a("li",[a("code",[t._v("str.split(regexp|substr, limit)")]),t._v("  使用正则表达式（或子字符串）作为分隔符来分割字符串。")]),t._v(" "),a("li",[a("code",[t._v("str.search(regexp)")]),t._v("  返回第一个匹配项的位置，如果未找到，则返回 "),a("code",[t._v("-1")])]),t._v(" "),a("li",[a("code",[t._v("str.replace(str|regexp, str|func)")]),t._v(" 用于搜索和替换的通用方法")]),t._v(" "),a("li",[a("code",[t._v("regexp.exec(str)")]),t._v("  方法返回字符串 "),a("code",[t._v("str")]),t._v(" 中的 "),a("code",[t._v("regexp")]),t._v(" 匹配项。")]),t._v(" "),a("li",[a("code",[t._v("regexp.test(str)")]),t._v("  查找匹配项，然后返回 "),a("code",[t._v("true/false")]),t._v("  表示是否存在。")])])])}),[],!1,null,null,null);s.default=e.exports}}]);